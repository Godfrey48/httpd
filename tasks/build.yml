---
# file: apache/tasks/build.yml
#
# build tasks.
#

- name: build | ensure the build dependencies are present
  apt:
    name="{{ item }}"
    state=present
  become: yes
  with_items: "{{ httpd_build_dependencies }}"

- name: build | download tarball MD5
  get_url:
    url="{{ httpd_download_url_md5 }}"
    dest="{{ httpd_dir_source }}/{{ httpd_tarball }}.md5"
    owner="{{ httpd_user.name }}"
    group="{{ httpd_user.name }}"
    mode=0440
    validate_certs=no
  become: yes

- name: build | register MD5 into a variable
  command: "cat {{ httpd_dir_source }}/{{ httpd_tarball }}.md5"
  register: task_httpd_md5
  changed_when: no
  become: yes

- name: build | download tarball
  get_url:
    url="{{ httpd_download_url }}"
    dest="{{ httpd_dir_source }}/{{ httpd_tarball }}"
    owner="{{ httpd_user.name }}"
    group="{{ httpd_user.name }}"
    mode=0440
    checksum="md5:{{ task_httpd_md5.stdout.split(' ')[0] }}"
    validate_certs=no
  become: yes
  register: task_httpd_download

- name: build | unarchive tarball
  unarchive:
    src="{{ httpd_dir_source }}/{{ httpd_tarball }}"
    dest="{{ httpd_dir_source }}"
    copy=no
    owner="{{ httpd_user.name }}"
    group="{{ httpd_user.name }}"
  when: task_httpd_download.changed
  become: yes

- name: build | configure
  command: "./configure {{ ' '.join(httpd_build_options) }}"
  args:
    chdir: "{{ httpd_dir_source }}/httpd-{{ httpd_version }}"
  when: task_httpd_download.changed

- name: build | build
  command: make
  args:
    chdir: "{{ httpd_dir_source }}/httpd-{{ httpd_version }}"
  when: task_httpd_download.changed

- name: build | install
  command: make install
  args:
    chdir: "{{ httpd_dir_source }}/httpd-{{ httpd_version }}"
  become: yes
  when: task_httpd_download.changed
  notify: start httpd
